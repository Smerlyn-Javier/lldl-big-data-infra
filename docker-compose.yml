############################
# COMPOSE FILE – LLDL STACK
############################

# -------------------------------------------------------------------------
# Bloque de variables comunes para los servicios de Airflow
# Se define como campo de extensión (prefijo x-) para no violar el esquema
# -------------------------------------------------------------------------
x-airflow-env: &airflow-env
  AIRFLOW__CORE__EXECUTOR: LocalExecutor
  AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: >-
    postgresql+psycopg2://${POSTGRES_USER:-lldl}:${POSTGRES_PASSWORD:-lldl}@postgres:5432/airflow
  AIRFLOW__CORE__LOAD_EXAMPLES: "False"
  _AIRFLOW_WWW_USER_USERNAME: ${AIRFLOW_ADMIN_USER:-airflow}
  _AIRFLOW_WWW_USER_PASSWORD: ${AIRFLOW_ADMIN_PWD:-airflow}

############################
# REDES Y VOLUMENES
############################
networks:
  lldl-net:

volumes:
  kafka-data:
  zookeeper-data:
  postgres-data:
  superset-data:
  spark-apps:
  airflow-dags:
  airflow-logs:

############################
# SERVICIOS
############################
services:
  # -----------------------------------------------------------------------
  # ZOOKEEPER
  # -----------------------------------------------------------------------
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    volumes:
      - zookeeper-data:/var/lib/zookeeper
    networks: [lldl-net]

  # -----------------------------------------------------------------------
  # KAFKA
  # -----------------------------------------------------------------------
  kafka:
    image: confluentinc/cp-kafka:7.6.0
    depends_on: [zookeeper]
    ports: ["9092:9092"]
    environment:
      KAFKA_BROKER_ID: ${KAFKA_BROKER_ID:-1}
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - kafka-data:/var/lib/kafka/data
    networks: [lldl-net]

  # -----------------------------------------------------------------------
  # SPARK MASTER
  # -----------------------------------------------------------------------
  spark-master:
    image: bitnami/spark:3.5.0
    environment:
      - SPARK_MODE=master
    ports:
      - "7077:7077"
      - "8082:8080"   # Spark UI en 8082 para no colisionar con Airflow
    volumes:
      - spark-apps:/opt/spark-apps
    networks: [lldl-net]

  # -----------------------------------------------------------------------
  # SPARK WORKER
  # -----------------------------------------------------------------------
  spark-worker-1:
    image: bitnami/spark:3.5.0
    depends_on: [spark-master]
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    ports:
      - "8083:8081"
    volumes:
      - spark-apps:/opt/spark-apps:ro
    networks: [lldl-net]

  # -----------------------------------------------------------------------
  # POSTGRES (Operativo + metadatos Superset / Airflow)
  # -----------------------------------------------------------------------
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-lldl}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-lldl}
      POSTGRES_DB: ${POSTGRES_DB:-lldl_ops}
    ports: ["5432:5432"]
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./infra/init-sql:/docker-entrypoint-initdb.d
    networks: [lldl-net]

  # -----------------------------------------------------------------------
  # SUPERSET
  # -----------------------------------------------------------------------
  superset:
    image: apache/superset:latest-dev
    depends_on: [postgres]
    ports: ["8088:8088"]
    env_file: .env
    environment:
      SUPERSET_SECRET_KEY: ${SUPERSET_SECRET_KEY:-superset_secret}
      SUPERSET_DATABASE_URI: >-
        postgresql+psycopg2://${POSTGRES_USER:-lldl}:${POSTGRES_PASSWORD:-lldl}@postgres:5432/${POSTGRES_DB:-lldl_ops}
      SUPERSET_ADMIN_USERNAME: ${SUPERSET_ADMIN_USER:-admin}
      SUPERSET_ADMIN_PASSWORD: ${SUPERSET_ADMIN_PWD:-admin123}
      SUPERSET_ADMIN_FIRSTNAME: Admin
      SUPERSET_ADMIN_LASTNAME: User
      SUPERSET_ADMIN_EMAIL: admin@lldl.local
    volumes:
      - superset-data:/app/superset_home
      - ./superset:/docker-entrypoint-init-scripts
    networks: [lldl-net]

  # -----------------------------------------------------------------------
  # AIRFLOW – INIT
  # -----------------------------------------------------------------------
  airflow-init:
    image: apache/airflow:2.9.2
    depends_on: [postgres]
    entrypoint: /bin/bash
    command: -c "airflow db migrate && airflow users create --username $${_AIRFLOW_WWW_USER_USERNAME} --firstname Admin --lastname User --role Admin --email admin@lldl.local --password $${_AIRFLOW_WWW_USER_PASSWORD} || true"
    env_file: .env
    environment:
      <<: *airflow-env
    volumes:
      - airflow-dags:/opt/airflow/dags
      - airflow-logs:/opt/airflow/logs
      - ./dags:/opt/airflow/dags:ro
    networks: [lldl-net]

  # -----------------------------------------------------------------------
  # AIRFLOW – WEBSERVER
  # -----------------------------------------------------------------------
  airflow-webserver:
    image: apache/airflow:2.9.2
    depends_on: [airflow-init]
    ports: ["8080:8080"]
    env_file: .env
    environment:
      <<: *airflow-env
    command: airflow webserver
    volumes:
      - airflow-dags:/opt/airflow/dags
      - airflow-logs:/opt/airflow/logs
      - ./dags:/opt/airflow/dags:ro
    networks: [lldl-net]

  # -----------------------------------------------------------------------
  # AIRFLOW – SCHEDULER
  # -----------------------------------------------------------------------
  airflow-scheduler:
    image: apache/airflow:2.9.2
    depends_on: [airflow-webserver]
    env_file: .env
    environment:
      <<: *airflow-env
    command: airflow scheduler
    volumes:
      - airflow-dags:/opt/airflow/dags
      - airflow-logs:/opt/airflow/logs
      - ./dags:/opt/airflow/dags:ro
    networks: [lldl-net]
